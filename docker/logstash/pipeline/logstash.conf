# Logstash 管道配置
# 处理在线判题系统的各种日志

input {
  # Beats 输入（用于接收 Filebeat 数据）
  beats {
    port => 5044
  }
  
  # TCP 输入（用于应用程序直接发送日志）
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # UDP 输入（用于 syslog）
  udp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # 根据来源处理不同类型的日志
  if [fields][service] {
    mutate {
      add_field => { "service_name" => "%{[fields][service]}" }
    }
  }
  
  # 处理 JSON 格式的日志
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }
  
  # 处理时间戳
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # 处理用户服务日志
  if [service_name] == "user-service" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:log_timestamp} \[%{LOGLEVEL:log_level}\] %{GREEDYDATA:log_message}" 
      }
    }
    
    # 提取用户相关信息
    if [log_message] =~ /user_id/ {
      grok {
        match => { 
          "log_message" => ".*user_id[:\s]*(?<user_id>\d+).*" 
        }
      }
      
      if [user_id] {
        mutate {
          convert => { "user_id" => "integer" }
        }
      }
    }
  }
  
  # 处理判题服务日志
  if [service_name] == "judge-service" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:log_timestamp} \[%{LOGLEVEL:log_level}\] %{GREEDYDATA:log_message}" 
      }
    }
    
    # 提取判题相关信息
    if [log_message] =~ /submission_id/ {
      grok {
        match => { 
          "log_message" => ".*submission_id[:\s]*(?<submission_id>\d+).*" 
        }
      }
      
      if [submission_id] {
        mutate {
          convert => { "submission_id" => "integer" }
        }
      }
    }
    
    # 提取判题状态
    if [log_message] =~ /status/ {
      grok {
        match => { 
          "log_message" => ".*status[:\s]*(?<judge_status>\w+).*" 
        }
      }
    }
  }
  
  # 处理API网关日志
  if [service_name] == "api-gateway" {
    grok {
      match => { 
        "message" => "%{HTTPD_COMMONLOG}" 
      }
    }
    
    # 计算响应时间类别
    if [response_time] {
      mutate {
        convert => { "response_time" => "float" }
      }
      
      if [response_time] < 100 {
        mutate {
          add_field => { "response_category" => "fast" }
        }
      } else if [response_time] < 500 {
        mutate {
          add_field => { "response_category" => "normal" }
        }
      } else {
        mutate {
          add_field => { "response_category" => "slow" }
        }
      }
    }
  }
  
  # 添加通用字段
  mutate {
    add_field => { 
      "[@metadata][index_name]" => "oj-logs-%{+YYYY.MM.dd}"
      "environment" => "development"
    }
  }
  
  # 移除不需要的字段
  mutate {
    remove_field => [ "agent", "ecs", "input", "log", "host" ]
  }
}

output {
  # 输出到 Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][index_name]}"
    template_name => "oj-logs"
    template_pattern => "oj-logs-*"
    template => {
      "index_patterns" => ["oj-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
        "index.refresh_interval" => "5s"
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "service_name" => { "type" => "keyword" }
          "log_level" => { "type" => "keyword" }
          "user_id" => { "type" => "long" }
          "submission_id" => { "type" => "long" }
          "judge_status" => { "type" => "keyword" }
          "response_time" => { "type" => "float" }
          "response_category" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "log_message" => { "type" => "text" }
        }
      }
    }
  }
  
  # 调试输出（开发环境）
  stdout {
    codec => rubydebug {
      metadata => true
    }
  }
}
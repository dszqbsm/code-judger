syntax = "v1"

info(
    title: "Judge API"
    desc: "在线判题系统 - 判题服务API"
    author: "OJ Team"
    version: "v1.0.0"
)

// 基础响应结构
type BaseResp {
    Code    int    `json:"code"`
    Message string `json:"message"`
}

// ==================== 判题任务提交 ====================
type SubmitJudgeReq {
    SubmissionId int64  `json:"submission_id" validate:"required,min=1"`
    ProblemId    int64  `json:"problem_id" validate:"required,min=1"`
    UserId       int64  `json:"user_id" validate:"required,min=1"`
    Language     string `json:"language" validate:"required,oneof=cpp c java python go javascript"`
    Code         string `json:"code" validate:"required,min=1"`
    // 移除 TimeLimit、MemoryLimit、TestCases
    // 这些参数应该通过 ProblemId 从题目服务获取
}

type TestCase {
    CaseId         int    `json:"case_id"`
    Input          string `json:"input"`
    ExpectedOutput string `json:"expected_output"`
    TimeLimit      int    `json:"time_limit,optional"`    // 可选，覆盖全局时间限制
    MemoryLimit    int    `json:"memory_limit,optional"`  // 可选，覆盖全局内存限制
}

type SubmitJudgeResp {
    BaseResp
    Data SubmitJudgeData `json:"data"`
}

type SubmitJudgeData {
    SubmissionId   int64  `json:"submission_id"`
    Status         string `json:"status"`
    QueuePosition  int    `json:"queue_position"`
    EstimatedTime  int    `json:"estimated_time"` // 预计等待时间(秒)
}

// ==================== 判题结果查询 ====================
type GetJudgeResultReq {
    SubmissionId int64 `path:"submission_id" validate:"required,min=1"`
}

type GetJudgeResultResp {
    BaseResp
    Data JudgeResult `json:"data"`
}

type JudgeResult {
    SubmissionId int64              `json:"submission_id"`
    Status       string             `json:"status"`
    Score        int                `json:"score"`
    TimeUsed     int                `json:"time_used"`     // 最大时间使用(毫秒)
    MemoryUsed   int                `json:"memory_used"`   // 最大内存使用(KB)
    CompileInfo  CompileInfo        `json:"compile_info"`
    TestCases    []TestCaseResult   `json:"test_cases"`
    JudgeInfo    JudgeInfo          `json:"judge_info"`
}

type CompileInfo {
    Success bool   `json:"success"`
    Message string `json:"message"`
    Time    int    `json:"time"` // 编译时间(毫秒)
}

type TestCaseResult {
    CaseId      int    `json:"case_id"`
    Status      string `json:"status"`
    TimeUsed    int    `json:"time_used"`    // 毫秒
    MemoryUsed  int    `json:"memory_used"`  // KB
    Input       string `json:"input"`
    Output      string `json:"output"`
    Expected    string `json:"expected"`
    ErrorOutput string `json:"error_output,optional"`
}

type JudgeInfo {
    JudgeServer     string `json:"judge_server"`
    JudgeTime       string `json:"judge_time"`
    LanguageVersion string `json:"language_version"`
}

// ==================== 判题状态查询 ====================
type GetJudgeStatusReq {
    SubmissionId int64 `path:"submission_id" validate:"required,min=1"`
}

type GetJudgeStatusResp {
    BaseResp
    Data JudgeStatus `json:"data"`
}

type JudgeStatus {
    SubmissionId    int64  `json:"submission_id"`
    Status          string `json:"status"`
    Progress        int    `json:"progress"`        // 进度百分比
    CurrentTestCase int    `json:"current_test_case"` // 当前测试用例编号
    TotalTestCases  int    `json:"total_test_cases"`  // 总测试用例数
    Message         string `json:"message"`
}

// ==================== 取消判题任务 ====================
type CancelJudgeReq {
    SubmissionId int64 `path:"submission_id" validate:"required,min=1"`
}

type CancelJudgeResp {
    BaseResp
    Data CancelJudgeData `json:"data"`
}

type CancelJudgeData {
    SubmissionId int64  `json:"submission_id"`
    Status       string `json:"status"`
    Message      string `json:"message"`
}

// ==================== 重新判题 ====================
type RejudgeReq {
    SubmissionId int64 `path:"submission_id" validate:"required,min=1"`
}

type RejudgeResp {
    BaseResp
    Data RejudgeData `json:"data"`
}

type RejudgeData {
    SubmissionId int64  `json:"submission_id"`
    Status       string `json:"status"`
    Message      string `json:"message"`
}

// ==================== 判题节点状态 ====================
type GetJudgeNodesReq {
}

type GetJudgeNodesResp {
    BaseResp
    Data JudgeNodesData `json:"data"`
}

type JudgeNodesData {
    Nodes []JudgeNode `json:"nodes"`
    Total int         `json:"total"`
}

type JudgeNode {
    NodeId       string `json:"node_id"`
    NodeName     string `json:"node_name"`
    Status       string `json:"status"`        // online, offline, busy
    CpuUsage     float64 `json:"cpu_usage"`
    MemoryUsage  float64 `json:"memory_usage"`
    ActiveTasks  int    `json:"active_tasks"`
    TotalTasks   int    `json:"total_tasks"`
    LastHeartbeat string `json:"last_heartbeat"`
}

// ==================== 判题队列状态 ====================
type GetJudgeQueueReq {
}

type GetJudgeQueueResp {
    BaseResp
    Data JudgeQueueData `json:"data"`
}

type JudgeQueueData {
    QueueLength   int           `json:"queue_length"`
    PendingTasks  int           `json:"pending_tasks"`
    RunningTasks  int           `json:"running_tasks"`
    CompletedTasks int          `json:"completed_tasks"`
    FailedTasks   int           `json:"failed_tasks"`
    QueueItems    []QueueItem   `json:"queue_items"`
}

type QueueItem {
    SubmissionId int64  `json:"submission_id"`
    UserId       int64  `json:"user_id"`
    ProblemId    int64  `json:"problem_id"`
    Language     string `json:"language"`
    Priority     int    `json:"priority"`
    QueueTime    string `json:"queue_time"`
    EstimatedTime int   `json:"estimated_time"`
}

// ==================== 健康检查 ====================
type HealthCheckReq {
}

type HealthCheckResp {
    BaseResp
    Data HealthData `json:"data"`
}

type HealthData {
    Status      string `json:"status"`
    Timestamp   string `json:"timestamp"`
    Version     string `json:"version"`
    Uptime      int64  `json:"uptime"`
    SystemInfo  SystemInfo `json:"system_info"`
}

type SystemInfo {
    CpuUsage    float64 `json:"cpu_usage"`
    MemoryUsage float64 `json:"memory_usage"`
    DiskUsage   float64 `json:"disk_usage"`
    GoroutineCount int  `json:"goroutine_count"`
}

// ==================== 支持语言查询 ====================
type GetLanguagesReq {
}

type GetLanguagesResp {
    BaseResp
    Data LanguagesData `json:"data"`
}

type LanguagesData {
    Languages []LanguageConfig `json:"languages"`
}

type LanguageConfig {
    Name             string  `json:"name"`
    DisplayName      string  `json:"display_name"`
    Version          string  `json:"version"`
    FileExtension    string  `json:"file_extension"`
    CompileCommand   string  `json:"compile_command"`
    ExecuteCommand   string  `json:"execute_command"`
    TimeMultiplier   float64 `json:"time_multiplier"`
    MemoryMultiplier float64 `json:"memory_multiplier"`
    IsEnabled        bool    `json:"is_enabled"`
}

// API路由定义
@server(
    group: judge
    prefix: /api/v1/judge
)
service judge-api {
    @doc "提交判题任务"
    @handler SubmitJudgeHandler
    post /submit (SubmitJudgeReq) returns (SubmitJudgeResp)
    
    @doc "查询判题结果"
    @handler GetJudgeResultHandler
    get /result/:submission_id (GetJudgeResultReq) returns (GetJudgeResultResp)
    
    @doc "查询判题状态"
    @handler GetJudgeStatusHandler
    get /status/:submission_id (GetJudgeStatusReq) returns (GetJudgeStatusResp)
    
    @doc "取消判题任务"
    @handler CancelJudgeHandler
    delete /cancel/:submission_id (CancelJudgeReq) returns (CancelJudgeResp)
    
    @doc "重新判题"
    @handler RejudgeHandler
    post /rejudge/:submission_id (RejudgeReq) returns (RejudgeResp)
}

@server(
    group: system
    prefix: /api/v1/judge
)
service judge-api {
    @doc "获取判题节点状态"
    @handler GetJudgeNodesHandler
    get /nodes (GetJudgeNodesReq) returns (GetJudgeNodesResp)
    
    @doc "获取判题队列状态"
    @handler GetJudgeQueueHandler
    get /queue (GetJudgeQueueReq) returns (GetJudgeQueueResp)
    
    @doc "健康检查"
    @handler HealthCheckHandler
    get /health (HealthCheckReq) returns (HealthCheckResp)
    
    @doc "获取支持的编程语言"
    @handler GetLanguagesHandler
    get /languages (GetLanguagesReq) returns (GetLanguagesResp)
}
